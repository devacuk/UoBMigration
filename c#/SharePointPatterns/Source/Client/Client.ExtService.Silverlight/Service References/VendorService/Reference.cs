//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace Client.ExtService.Silverlight.VendorService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VendorService.IVendorServices")]
    public interface IVendorServices {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVendorServices/GetAccountsPayable", ReplyAction="http://tempuri.org/IVendorServices/GetAccountsPayableResponse")]
        System.IAsyncResult BeginGetAccountsPayable(string vendorName, System.AsyncCallback callback, object asyncState);
        
        double EndGetAccountsPayable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVendorServices/WhoAmI", ReplyAction="http://tempuri.org/IVendorServices/WhoAmIResponse")]
        System.IAsyncResult BeginWhoAmI(System.AsyncCallback callback, object asyncState);
        
        string EndWhoAmI(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVendorServicesChannel : Client.ExtService.Silverlight.VendorService.IVendorServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountsPayableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountsPayableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WhoAmICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WhoAmICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VendorServicesClient : System.ServiceModel.ClientBase<Client.ExtService.Silverlight.VendorService.IVendorServices>, Client.ExtService.Silverlight.VendorService.IVendorServices {
        
        private BeginOperationDelegate onBeginGetAccountsPayableDelegate;
        
        private EndOperationDelegate onEndGetAccountsPayableDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountsPayableCompletedDelegate;
        
        private BeginOperationDelegate onBeginWhoAmIDelegate;
        
        private EndOperationDelegate onEndWhoAmIDelegate;
        
        private System.Threading.SendOrPostCallback onWhoAmICompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public VendorServicesClient() {
        }
        
        public VendorServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VendorServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VendorServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VendorServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetAccountsPayableCompletedEventArgs> GetAccountsPayableCompleted;
        
        public event System.EventHandler<WhoAmICompletedEventArgs> WhoAmICompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Client.ExtService.Silverlight.VendorService.IVendorServices.BeginGetAccountsPayable(string vendorName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountsPayable(vendorName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double Client.ExtService.Silverlight.VendorService.IVendorServices.EndGetAccountsPayable(System.IAsyncResult result) {
            return base.Channel.EndGetAccountsPayable(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountsPayable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vendorName = ((string)(inValues[0]));
            return ((Client.ExtService.Silverlight.VendorService.IVendorServices)(this)).BeginGetAccountsPayable(vendorName, callback, asyncState);
        }
        
        private object[] OnEndGetAccountsPayable(System.IAsyncResult result) {
            double retVal = ((Client.ExtService.Silverlight.VendorService.IVendorServices)(this)).EndGetAccountsPayable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountsPayableCompleted(object state) {
            if ((this.GetAccountsPayableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountsPayableCompleted(this, new GetAccountsPayableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountsPayableAsync(string vendorName) {
            this.GetAccountsPayableAsync(vendorName, null);
        }
        
        public void GetAccountsPayableAsync(string vendorName, object userState) {
            if ((this.onBeginGetAccountsPayableDelegate == null)) {
                this.onBeginGetAccountsPayableDelegate = new BeginOperationDelegate(this.OnBeginGetAccountsPayable);
            }
            if ((this.onEndGetAccountsPayableDelegate == null)) {
                this.onEndGetAccountsPayableDelegate = new EndOperationDelegate(this.OnEndGetAccountsPayable);
            }
            if ((this.onGetAccountsPayableCompletedDelegate == null)) {
                this.onGetAccountsPayableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountsPayableCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountsPayableDelegate, new object[] {
                        vendorName}, this.onEndGetAccountsPayableDelegate, this.onGetAccountsPayableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Client.ExtService.Silverlight.VendorService.IVendorServices.BeginWhoAmI(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWhoAmI(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Client.ExtService.Silverlight.VendorService.IVendorServices.EndWhoAmI(System.IAsyncResult result) {
            return base.Channel.EndWhoAmI(result);
        }
        
        private System.IAsyncResult OnBeginWhoAmI(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Client.ExtService.Silverlight.VendorService.IVendorServices)(this)).BeginWhoAmI(callback, asyncState);
        }
        
        private object[] OnEndWhoAmI(System.IAsyncResult result) {
            string retVal = ((Client.ExtService.Silverlight.VendorService.IVendorServices)(this)).EndWhoAmI(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWhoAmICompleted(object state) {
            if ((this.WhoAmICompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WhoAmICompleted(this, new WhoAmICompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WhoAmIAsync() {
            this.WhoAmIAsync(null);
        }
        
        public void WhoAmIAsync(object userState) {
            if ((this.onBeginWhoAmIDelegate == null)) {
                this.onBeginWhoAmIDelegate = new BeginOperationDelegate(this.OnBeginWhoAmI);
            }
            if ((this.onEndWhoAmIDelegate == null)) {
                this.onEndWhoAmIDelegate = new EndOperationDelegate(this.OnEndWhoAmI);
            }
            if ((this.onWhoAmICompletedDelegate == null)) {
                this.onWhoAmICompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWhoAmICompleted);
            }
            base.InvokeAsync(this.onBeginWhoAmIDelegate, null, this.onEndWhoAmIDelegate, this.onWhoAmICompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Client.ExtService.Silverlight.VendorService.IVendorServices CreateChannel() {
            return new VendorServicesClientChannel(this);
        }
        
        private class VendorServicesClientChannel : ChannelBase<Client.ExtService.Silverlight.VendorService.IVendorServices>, Client.ExtService.Silverlight.VendorService.IVendorServices {
            
            public VendorServicesClientChannel(System.ServiceModel.ClientBase<Client.ExtService.Silverlight.VendorService.IVendorServices> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAccountsPayable(string vendorName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vendorName;
                System.IAsyncResult _result = base.BeginInvoke("GetAccountsPayable", _args, callback, asyncState);
                return _result;
            }
            
            public double EndGetAccountsPayable(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("GetAccountsPayable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWhoAmI(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("WhoAmI", _args, callback, asyncState);
                return _result;
            }
            
            public string EndWhoAmI(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("WhoAmI", _args, result)));
                return _result;
            }
        }
    }
}
